#!/bin/bash

# Configuraci√≥n de colores para la interfaz del juego
# Usamos 'tput' para cambiar los colores del texto en consola y mejorar la presentaci√≥n visual.

red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
cyan=$(tput setaf 6)
reset=$(tput sgr0)

#  Variables del juego
# 'reputacion' es el puntaje del jugador. 'nombre' se solicita al iniciar el juego.

reputacion=50
nombre=""

# Funci√≥n que carga los datos del sistema desde el m√≥dulo del kernel.
# Lee el archivo /proc/juego_kernel l√≠nea por l√≠nea y extrae la informaci√≥n del sistema real.
# Verifica que el archivo exista; si no, lanza un error.

cargar_datos_kernel() {
    if [ ! -f /proc/juego_kernel ]; then
        echo "${red}ERROR: El m√≥dulo del kernel no est√° cargado o /proc/juego_kernel no existe.${reset}"
        exit 1
    fi

    # Reiniciar variables
    
    kernel=""
    procesos=""
    ram_total=""
    ram_libre=""
    uptime=""
    carga=""
    pid=""
    ppid=""
    uid=""

      # Lee el archivo del m√≥dulo y asigna valores a las variables
      
    while IFS=":" read -r clave valor; do
        clave=$(echo "$clave" | xargs)
        valor=$(echo "$valor" | xargs)
        case "$clave" in
            "Versi√≥n del kernel") kernel=$valor ;;
            "Procesos activos") procesos=$valor ;;
            "RAM total") ram_total=$valor ;;
            "RAM libre") ram_libre=$valor ;;
            "Tiempo de actividad (segundos)") uptime=$valor ;;
            "Carga promedio (1 min)") carga=$valor ;;
            "PID actual") pid=$valor ;;
            "PID padre") ppid=$valor ;;
            "UID del usuario actual") uid=$valor ;;
        esac
    done < /proc/juego_kernel
}

# Funci√≥n de introducci√≥n al juego
# Muestra arte ASCII y una breve historia para ambientar la experiencia del jugador.
# Tambi√©n solicita el nombre del jugador.

intro() {
    clear
    echo -e "${green}"
    echo "            ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     "
    echo "            ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë     "
    echo "            ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë     "
    echo "            ‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë     "
    echo "            ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
    echo "            ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
    echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  "
    echo "‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  "
    echo "‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó"
    echo "‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo "      PROYECTO PLATAFORMAS - GRUPO 2 -  M√ìDULO DEL KERNEL EN TIEMPO REAL"
    echo -e "${reset}"
    echo
    echo "              üñ•Ô∏è  ¬°Bienvenido, explorador del sistema! üöÄ"
    echo 
    echo "En esta aventura de texto √∫nica, no solo tomas decisiones‚Ä¶ tambi√©n navegas por"
    echo "el n√∫cleo real de tu sistema operativo. A trav√©s de un m√≥dulo del kernel hecho "
    echo "especialmente para este juego, accedes a datos reales üß†: procesos activos, carga"
    echo "del sistema, uso de memoria, etc. Cada escena que vives est√° conectada con el estado "
    echo "real del sistema."
    echo
    echo "‚ö†Ô∏è Elige con cuidado, analiza los datos y defiende la estabilidad del sistema üõ°Ô∏è."
    echo
    echo "                  El Kernel est√° vivo‚Ä¶ y vos sos parte de √©l.                      "
    echo 
    echo "¬øEst√°s listo para sumergirte en el coraz√≥n del sistema? üíªüî•"
    echo
    read -p "üë§ INGRESE EL NOMBRE DEL JUGADOR: " nombre
    clear
}

# Funci√≥n para mostrar el estado actual del sistema
# Muestra los datos cargados desde el m√≥dulo, como RAM, carga, procesos y PID.

mostrar_estado() {
    cargar_datos_kernel
    echo -e "${blue}--- ESTADO DEL SISTEMA ---${reset}"
    echo "üë§ Jugador: $nombre"
    echo "üèÜ Reputaci√≥n: $reputacion"
    echo "üß† Kernel: $kernel"
    echo "üîß Procesos activos: $procesos"
    echo "üì¶ RAM Total: $ram_total "
    echo "üü¢ RAM Libre: $ram_libre "
    echo "‚öñ Carga promedio (1min): $carga"
    echo "‚è± Uptime: $uptime segundos"
    echo "üî¢ PID actual: $pid | PID padre: $ppid"
    echo "üßë UID del usuario: $uid"
    echo "-----------------------------"
    echo
}

# Funci√≥n para mostrar el final del juego
# Muestra un mensaje diferente seg√∫n la reputaci√≥n del jugador acumulada durante el juego.

finalizar_juego() {
    echo
    echo -e "${yellow}üìù RESUMEN FINAL:${reset}"
    if [ $reputacion -ge 80 ]; then
        echo -e "${green}üåü ¬°Has salvado el n√∫cleo y mantenido el sistema estable!${reset}"
    elif [ $reputacion -ge 50 ]; then
        echo -e "${cyan}üîß Tu gesti√≥n fue aceptable. Puedes mejorar a√∫n m√°s.${reset}"
    else
        echo -e "${red}üí• El sistema colaps√≥ por malas decisiones.${reset}"
    fi
    echo -e "${blue}¬°Gracias por jugar, $nombre!${reset}"
    exit 0
}

# Funci√≥n para cada escena del juego
# Muestra una situaci√≥n, las 3 decisiones posibles y ajusta la reputaci√≥n seg√∫n la elecci√≥n.
# Esta funci√≥n se reutiliza para cada escenario con diferentes par√°metros.

escena3() {
    local numero="$1"
    local descripcion="$2"
    local opcion1="$3" efecto1="$4"
    local opcion2="$5" efecto2="$6"
    local opcion3="$7" efecto3="$8"

    echo -e "${yellow}üî∏ ESCENA $numero:${reset} $descripcion"
    mostrar_estado
    echo "1) $opcion1"
    echo "2) $opcion2"
    echo "3) $opcion3"
    read -p "¬øQu√© decides hacer? [1/2/3] ‚û§ " eleccion

    case $eleccion in
        1) reputacion=$((reputacion + efecto1));;
        2) reputacion=$((reputacion + efecto2));;
        3) reputacion=$((reputacion + efecto3));;
        *) echo "Opci√≥n inv√°lida."; sleep 1;;
    esac
    sleep 2
    clear
}

# Funci√≥n principal que ejecuta todo el juego
# Ejecuta la introducci√≥n, llama a cada escena con datos reales y finaliza el juego.

jugar() {
    intro
cargar_datos_kernel
    escena3 1 "El sistema reporta una carga promedio de $carga con $procesos procesos activos." \
        "Reduc√≠s tareas pesadas y prioriz√°s servicios cr√≠ticos." 10 \
        "Desactiv√°s temporalmente el monitoreo del sistema." -5 \
        "Aument√°s procesos de respaldo sin ajustar prioridades." -10

    escena3 2 "Solo quedan $ram_libre de RAM libre y un usuario va a abrir un navegador con m√∫ltiples pesta√±as." \
        "Limit√°s recursos del navegador y liber√°s memoria." 10 \
        "Ignor√°s el uso de RAM y dej√°s que se sature." -10 \
        "Permit√≠s que se ejecute pero limit√°s las pesta√±as activas." -5

    escena3 3 "El sistema lleva $uptime segundos encendido. Hay logs acumulados desde hace semanas." \
        "Planific√°s limpieza y reinicio controlado." 10 \
        "Ignor√°s la limpieza para no detener servicios." -5 \
        "Reinici√°s a la fuerza sin respaldo." -10

    escena3 4 "El proceso actual (PID $pid) fue lanzado por el padre $ppid. Sospech√°s comportamiento an√≥malo." \
        "Audit√°s el proceso y valid√°s con logs antes de actuar." 10 \
        "Mat√°s el proceso a ciegas sin investigar consecuencias." -10 \
        "Esper√°s a que el proceso termine por s√≠ solo." -5

    escena3 5 "El kernel en uso es $kernel, y hay una nueva versi√≥n que soluciona bugs cr√≠ticos." \
        "Prob√°s primero en entorno de prueba y actualiz√°s." 10 \
        "Actualiz√°s directo sin verificar compatibilidad." -5 \
        "Decid√≠s mantener la versi√≥n actual por comodidad." -10

    escena3 6 "El sistema tiene $procesos procesos y la carga subi√≥ a $carga. Algunos servicios est√°n lentos." \
        "Prioriz√°s servicios clave y paus√°s tareas no cr√≠ticas." 10 \
        "Reinici√°s servicios sin notificar usuarios." -5 \
        "Aument√°s hilos sin revisar consumo de CPU." -10

    escena3 7 "Un usuario con UID $uid ejecuta m√∫ltiples scripts pesados simult√°neamente." \
        "Le asign√°s l√≠mites con cgroups y avis√°s al usuario." 10 \
        "Bloque√°s su cuenta sin explicaci√≥n." -10 \
        "Dej√°s que sus scripts sigan corriendo sin intervenir." -5

    escena3 8 "Solo hay $ram_libre libres y otro servicio planea iniciar ahora." \
        "Suspend√©s el inicio hasta liberar memoria." 10 \
        "Forz√°s el arranque ignorando el riesgo de OOM." -10 \
        "Asign√°s swap temporal antes de iniciar." -5

    escena3 9 "El sistema muestra una carga de $carga y uptime de $uptime segundos. Varios procesos no responden." \
        "Ejecut√°s monitoreo activo y reconfigur√°s prioridades." 10 \
        "Reinici√°s el sistema sin guardar estado." -5 \
        "Esper√°s m√°s tiempo sin actuar." -10

    escena3 10 "Con $procesos procesos activos, recib√≠s una solicitud para ejecutar un an√°lisis profundo del sistema." \
        "Program√°s el an√°lisis en horas de baja carga." 10 \
        "Lo ejecut√°s ahora, causando lentitud." -5 \
        "Lo rechaz√°s sin justificar al usuario." -10

    finalizar_juego
}

# Llamada final que inicia el juego al ejecutar el script
jugar
